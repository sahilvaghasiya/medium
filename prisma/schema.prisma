// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  invitationCode  String?
  invitedBy       String?
  email           String          @unique
  phone           String          @unique
  name            String?
  role            Role
  posts           Post[]
  isEmailVerified Boolean         @default(false)
  statusOfAccount StatusOfAccount @default(ACTIVATED)
  createdAt       DateTime        @default(now()) @db.Date
  updatedAt       DateTime        @updatedAt @db.Date
  userCredential  UserCredential?
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String?
  adminId   String?
  token     String
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  author    User     @relation(fields: [createdBy], references: [id])
  createdBy String   @db.ObjectId
  tag       String[]
  title     String
  body      String
  status    Status   @default(PENDING)
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String?
  phone     String   @unique
  name      String?
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model UserCredential {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  password  String
  otp       Json
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Tag {
  HEALTH
  BACKEND
  EDUCATION
  ENVIRONMENT
  SCIENCE
  BUSINESS
}

enum StatusOfAccount {
  INVITED
  ACTIVATED
  DEACTIVATED
}
